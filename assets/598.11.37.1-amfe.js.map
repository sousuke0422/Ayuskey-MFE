{"version":3,"file":"598.11.37.1-amfe.js","mappings":"qJACA,MAAMA,EAAQ,IAAIC,IAkBX,SAASC,EAAKC,GACjB,MAAMC,EAAQ,QAAsB,SAAWD,GAC7B,MAAdC,EAAMD,MAIP,SAAkBE,EAAMC,GAE3B,GAAqB,IADA,QAAsB,sBAEvC,QAdD,SAAmBC,EAAOD,GAC7B,MAAME,EAAe,QAAsB,sBAE3C,OADAD,EAAMD,OAASE,GAAiB,EAAIF,GAAUE,EACvCD,GAYOE,CA3BX,SAAkBJ,EAAMK,GAAW,GACtC,IAAIH,EASJ,OARIG,GAAYV,EAAMW,IAAIN,GACtBE,EAAQP,EAAMY,IAAIP,IAGlBE,EAAQ,IAAIM,MAAM,yBAAyBR,SACvCK,GACAV,EAAMc,IAAIT,EAAME,IAEjBA,EAiBiBQ,CAASV,GAAOC,GAClCJ,OAPNc,CAASZ,EAAMD,KAAMC,EAAME","sources":["webpack://ayuskey-mfe/./src/client/app/common/scripts/sound.ts"],"sourcesContent":["import { ColdDeviceStorage } from '../../store';\nconst cache = new Map();\nexport function getAudio(file, useCache = true) {\n    let audio;\n    if (useCache && cache.has(file)) {\n        audio = cache.get(file);\n    }\n    else {\n        audio = new Audio(`/static-assets/sounds/${file}.mp3`);\n        if (useCache)\n            cache.set(file, audio);\n    }\n    return audio;\n}\nexport function setVolume(audio, volume) {\n    const masterVolume = ColdDeviceStorage.get('sound_masterVolume');\n    audio.volume = masterVolume - ((1 - volume) * masterVolume);\n    return audio;\n}\nexport function play(type) {\n    const sound = ColdDeviceStorage.get('sound_' + type);\n    if (sound.type == null)\n        return;\n    playFile(sound.type, sound.volume);\n}\nexport function playFile(file, volume) {\n    const masterVolume = ColdDeviceStorage.get('sound_masterVolume');\n    if (masterVolume === 0)\n        return;\n    const audio = setVolume(getAudio(file), volume);\n    audio.play();\n}\n"],"names":["cache","Map","play","type","sound","file","volume","audio","masterVolume","setVolume","useCache","has","get","Audio","set","getAudio","playFile"],"sourceRoot":""}